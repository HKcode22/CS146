- The high level approaches I took was that I re-ead the problem multiple times to understand
the problem. 

- I then read the input and output examples, watched videos to get more understanding
of BST. I then wrote code in java creating a node, and a int value, creating the function for lowest
common ancestor, I reviewed the announced test cases many times to understand what the output is
supposed to look like. I also used to my notebook to write down how the nodes were being reached
and how the output looked like.

-Then I implmented it using if statements, comparing each nodes value, and
using recursion. I understood the lowest common ancestor was to find the common decendent of 
p and q. 

-In the main I set the values for the nodes, and set values for p and q. Which then I sent it 
to the lowestCommonAncestor along with the root node. 

-In the lowestCommonAncestor function depending on the values of p and q, recursively
call the function on either the elft or right child of the current node, using if statement 
for comparison. If the one node is in the left and the other is in the right subtree then
the current node is the LCA.
